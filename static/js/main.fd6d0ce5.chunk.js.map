{"version":3,"sources":["services/userAPI.js","pages/Loading.jsx","pages/Login.jsx","pages/NotFound.jsx","services/musicsAPI.js","services/favoriteSongsAPI.js","Components/Header.jsx","Components/MusicCard.jsx","pages/Album.jsx","pages/Favorites.jsx","pages/Profile.jsx","pages/ProfileEdit.jsx","Components/Artist.jsx","services/searchAlbumsAPI.js","slices/index.js","pages/Search.jsx","App.js","store/store.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Loading","className","Component","Login","checkUserName","value","target","setState","disabled","length","userName","state","redirect","loading","this","type","placeholder","id","onChange","onClick","a","to","NotFound","getMusics","fetch","request","json","requestJson","results","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","Header","recoverUser","MusicCard","toggleFavoriteSongs","music","checked","addToFavorites","removeToFavoriteSongs","funFavoriteSongs","props","ok","checkFavorites","some","progresso","audio","intervalo","percentual","currentTime","duration","clearInterval","document","getElementsByClassName","style","cssText","playMusic","audioId","getElementById","play","setInterval","pauseMusic","pause","src","artworkUrl100","alt","title","trackName","previewUrl","controls","kind","htmlFor","e","defaultProps","Album","receiveAlbum","match","params","alb","albumReceived","favoriteSongsList","collectionName","artistName","map","index","Favorites","Profile","findUser","profile","ProfileEdit","checkDisabled","validEmail","re","test","editUser","handleInputs","validateEmail","onBlur","Artist","album","collectionId","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionPrice","releaseDate","trackCount","addSlice","createSlice","initialState","albums","reducers","addAlbuns","action","payload","actions","Search","checkTermToSearch","termToSearch","term","addToRTK","albumsReceived","search","lastTermSearched","data","connect","dispatch","App","path","component","exact","render","React","store","configureStore","reducer","myReducer","ReactDOM","StrictMode"],"mappings":"4ZAAMA,EAAW,OAKXC,EAAW,SAACC,GAAD,OAAUC,aAAaC,QAAQJ,EAAUK,KAAKC,UAAUJ,KASnEK,EAAkB,SAACC,GAAD,OAAc,SAACC,GACrCC,YAAW,WACTD,EAASD,KAfG,QAmBHG,EAAU,kBAAM,IAAIC,SAAQ,SAACC,GACxC,IAAIX,EAjBiBG,KAAKS,MAAMX,aAAaY,QAAQf,IAkBxC,OAATE,IACFA,EAAO,IAETK,EAAgBL,EAAhBK,CAAsBM,OAGXG,EAAa,SAACd,GAAD,OAAU,IAAIU,SAAQ,SAACC,GAO/CZ,EAAS,2BANS,CAChBgB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,YAAa,KAEalB,IAC5BK,EAlCqB,KAkCrBA,CAAgCM,OAGrBQ,EAAa,SAACC,GAAD,OAAiB,IAAIV,SAAQ,SAACC,GACtDZ,EAAS,eAAKqB,IACdf,EAvCqB,KAuCrBA,CAAgCM,O,eCtC5BU,E,4JACJ,WACE,OACE,sBAAKC,UAAU,MAAM,cAAY,SAAjC,UACE,wBACA,wBACA,+B,GANcC,aAYPF,IC+DAG,G,wDAvEb,aAAe,IAAD,8BACZ,gBASFC,cAAgB,YAA4B,IAAfC,EAAc,EAAxBC,OAAUD,MAE3B,EAAKE,SAAS,CACZC,SAAUH,EAAMI,OAFK,EAGrBC,SAAUL,KAZZ,EAAKM,MAAQ,CACXD,SAAU,GACVF,UAAU,EACVI,UAAU,EACVC,SAAS,GANC,E,0CAkBd,WAAU,IAAD,OACP,EAAkDC,KAAKH,MAA/CH,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,SAAUG,EAA5B,EAA4BA,QAASD,EAArC,EAAqCA,SAErC,OACE,8BAEIC,EAAU,cAAC,EAAD,IACR,sBAAK,cAAY,aAAaZ,UAAU,kBAAxC,UACE,uCACA,sBAAKA,UAAU,eAAf,UACE,8BACE,uBACEc,KAAK,OACLrB,KAAK,WACLsB,YAAY,mBACZC,GAAG,WACHZ,MAAQK,EACRQ,SAAWJ,KAAKV,cAChB,cAAY,uBAGhB,8BACE,wBACEW,KAAK,SACLP,SAAWA,EACXW,QAAU,WACR,EAAKZ,SAAS,CACZM,SAAS,GADX,sBAEG,sBAAAO,EAAA,kEACD,EADC,SAGiB3B,EAAW,CAAEC,KAAMgB,IAHpC,wBAGoD,OAHpD,WAECG,SAAS,EACTD,SAHD,WACIL,SADJ,6DAQL,cAAY,sBAdd,sBAoBAK,GAAY,cAAC,IAAD,CAAUS,GAAG,wB,GA7DvBnB,cCJdoB,E,4JACJ,WACE,OACE,qBAAK,cAAY,iBAAjB,0B,GAHiBpB,aAURoB,ICZTC,EAAS,uCAAG,WAAON,GAAP,iBAAAG,EAAA,sEACMI,MAAM,sCAAD,OAAuCP,EAAvC,iBADX,cACVQ,EADU,gBAEUA,EAAQC,OAFlB,cAEVC,EAFU,yBAGTA,EAAYC,SAHH,2CAAH,sDAMAL,I,QCNTM,EAAqB,iBAItB/C,KAAKS,MAAMX,aAAaY,QAAQqC,KACnCjD,aAAaC,QAAQgD,EAAoB/C,KAAKC,UAAU,KAE1D,IAAM+C,EAAoB,kBAAMhD,KAAKS,MAAMX,aAAaY,QAAQqC,KAE1DE,EAAoB,SAACC,GAAD,OAAmBpD,aAC1CC,QAAQgD,EAAoB/C,KAAKC,UAAUiD,KASxChD,EAAkB,SAACC,GAAD,OAAc,SAACC,GACrCC,YAAW,WACTD,EAASD,KApBG,OAwBHgD,EAAmB,kBAAM,IAAI5C,SAAQ,SAACC,GACjD,IAAM0C,EAAgBF,IACtB9C,EAAgBgD,EAAhBhD,CAA+BM,OAGpB4C,EAAU,SAACC,GAAD,OAAU,IAAI9C,SAAQ,SAACC,GAC5C,GAAI6C,EAAM,CACR,IAAMH,EAAgBF,IACtBC,EAAkB,GAAD,mBAAKC,GAAL,CAAoBG,KAEvCnD,EAjCqB,KAiCrBA,CAAgCM,OAGrB8C,EAAa,SAACD,GAAD,OAAU,IAAI9C,SAAQ,SAACC,GAC/C,IAAM0C,EAAgBF,IACtBC,EAAkBC,EAAcK,QAAO,SAACC,GAAD,OAAOA,EAAEC,UAAYJ,EAAKI,YACjEvD,EAvCqB,KAuCrBA,CAAgCM,O,QCkBnBkD,G,wDApDb,aAAe,IAAD,8BACZ,gBAWFC,YAZc,sBAYA,4BAAArB,EAAA,sEACOhC,IADP,cACNT,EADM,uBAGEA,EAAKe,KAHP,yBAGVf,KAHU,KAIVkC,SAAS,GAJC,KAEPN,SAFO,2DAVZ,EAAKI,MAAQ,CACXhC,KAAM,GACNkC,SAAS,GAJC,E,qDAQd,WACEC,KAAK2B,gB,oBAWP,WACE,MAA0B3B,KAAKH,MAAvBhC,EAAR,EAAQA,KAAMkC,EAAd,EAAcA,QACd,OACE,yBAAQ,cAAY,mBAApB,UACE,oCACE,8BACE,+CAIF,8BAEIA,EAAU,cAAC,EAAD,IACR,2CAEG,IACD,wBAAQ,cAAY,mBAApB,SAAyClC,YAMnD,+BACE,6BAAI,cAAC,IAAD,CAAM,cAAY,iBAAiB0C,GAAG,UAAtC,sBACJ,6BAAI,cAAC,IAAD,CAAM,cAAY,oBAAoBA,GAAG,aAAzC,yBACJ,6BAAI,cAAC,IAAD,CAAM,cAAY,kBAAkBA,GAAG,WAAvC,iC,GA9COnB,c,QCCfwC,G,wDACJ,aAAe,IAAD,8BACZ,gBAuBFC,oBAAsB,WAAaC,GAAU,EAApBtC,OACZuC,QACT,EAAKC,eAAeF,GAEpB,EAAKG,sBAAsBH,IA5BjB,EAgCdG,sBAAwB,SAACH,GACvB,IAAQI,EAAqB,EAAKC,MAA1BD,iBACR,EAAKzC,SAAS,CACZM,SAAS,GADX,sBAEG,4BAAAO,EAAA,sEACgBgB,EAAWQ,GAD3B,OACKM,EADL,OAED,EAAK3C,SAAS,CACZM,QAAiB,QAAPqC,EACVL,SAAS,IAEPG,GACFA,IAPD,6CApCS,EAgDdF,eAAiB,SAACF,GAChB,EAAKrC,SAAS,CACZM,SAAS,GADX,sBAEG,4BAAAO,EAAA,sEACgBc,EAAQU,GADxB,OACKM,EADL,OAED,EAAK3C,SAAS,CACZM,QAAiB,QAAPqC,EACVL,SAAS,IAJV,6CAnDS,EA4DdM,eAAiB,WACf,MAAiC,EAAKF,MAA9BL,EAAR,EAAQA,MAAR,EAAeZ,cACWoB,MAAK,SAAC/C,GAAD,OAAWA,EAAMkC,UAAYK,EAAML,YAEhE,EAAKhC,SAAS,CACZsC,SAAS,KAjED,EAsEdQ,UAAY,SAACC,GACX,IAAQV,EAAU,EAAKK,MAAfL,MACAW,EAAc,EAAK5C,MAAnB4C,UACFC,EAAcF,EAAMG,YAAcH,EAAMI,SAAY,IACtDJ,EAAMG,cAAgBH,EAAMI,UAC9BC,cAAcJ,GAEFK,SAASC,uBAAuBjB,EAAML,SAClC,GACduB,MAAMC,QAAV,8BAA2CP,EAA3C,4BA/EY,EAoFdQ,UAAY,WACV,IAAQC,EAAY,EAAKtD,MAAjBsD,QAEFX,EAAQM,SAASM,eAAeD,GACtCX,EAAMa,OAEN,IAAMZ,EAAYa,aAAY,WAC5B,EAAKf,UAAUC,KALF,KAOf,EAAK/C,SAAS,CACZgD,eA9FU,EAkGdc,WAAa,WACX,MAA+B,EAAK1D,MAA5BsD,EAAR,EAAQA,QAASV,EAAjB,EAAiBA,UACHK,SAASM,eAAeD,GAChCK,QACNX,cAAcJ,IApGd,EAAK5C,MAAQ,CACXwD,MAAM,EACNtD,SAAS,EACTgC,SAAS,EACToB,QAAS,QACTV,UAAW,MAPD,E,qDAWd,WACE,IAAQX,EAAU9B,KAAKmC,MAAfL,MACR9B,KAAKqC,iBACLrC,KAAKP,SAAS,CACZ0D,QAASrB,EAAML,Y,kCAInB,WACE,IAAQgB,EAAczC,KAAKH,MAAnB4C,UACRI,cAAcJ,K,oBAoFhB,WAAU,IAAD,OACCX,EAAU9B,KAAKmC,MAAfL,MACR,EAA4C9B,KAAKH,MAAzCE,EAAR,EAAQA,QAASgC,EAAjB,EAAiBA,QAASoB,EAA1B,EAA0BA,QAASE,EAAnC,EAAmCA,KACnC,OACE,kCAEIvB,EAAML,SACJ,sBAAKtC,UAAU,uBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKsE,IAAM3B,EAAM4B,cAAgBC,IAAI,4BAEvC,sBAAKxE,UAAU,0BAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,mBAAGA,UAAU,cAAb,SACE,sBAAMyE,MAAQ9B,EAAM+B,UAApB,SACG/B,EAAM+B,gBAIb,qBAAK1E,UAAU,oBAAf,SAEI2C,EAAMgC,YACJ,qCACE,uBACE,cAAY,kBACZL,IAAM3B,EAAMgC,WACZC,UAAQ,EACR5D,GAAKgD,EAJP,SAME,uBAAOa,KAAK,eAEd,8BAEIX,EACE,wBACEpD,KAAK,SACLI,QAAU,WACR,EAAKkD,aACL,EAAK9D,SAAS,CACZ4D,MAAOA,KALb,SASE,cAAC,IAAD,MAGF,wBACEpD,KAAK,SACLI,QAAU,WACR,EAAK6C,YACL,EAAKzD,SAAS,CACZ4D,MAAOA,KALb,SASE,cAAC,IAAD,aAShB,qBAAKlE,UAAU,eAAf,SACE,qBAAKA,UAAY2C,EAAML,eAG3B,qBAAKtC,UAAU,0BAAf,SAEIY,EAAU,cAAC,EAAD,IACR,wBACEkE,QAAUnC,EAAML,QAChBtC,UAAY4C,EAAU,UAAY,GAFpC,UAIE,cAAC,IAAD,IACA,uBACE9B,KAAK,WACLrB,KAAK,iBACLmD,QAAUA,EACV,uCAAgCD,EAAML,SACtCrB,SAAW,SAAC8D,GAAQ,EAAKrC,oBAAoBqC,EAAGpC,IAChD3B,GAAK2B,EAAML,wB,GA5LXrC,cA0MxBwC,EAAUuC,aAAe,CACvBjD,cAAe,GACfgB,iBAAkB,cAcLN,QCzIAwC,G,wDA9Eb,aAAe,IAAD,8BACZ,gBAaFC,aAdc,sBAcC,8BAAA/D,EAAA,6DACcH,EAAW,EAAKgC,MAAnCmC,MAASC,OAAUpE,GADd,SAEKM,EAAUN,GAFf,OAEPqE,EAFO,OAGb,EAAK/E,SAAS,CACZgF,cAAeD,IAJJ,2CAdD,EAsBdtD,cAAgB,WACd,EAAKzB,SAAS,CACZM,SAAS,GADX,sBAEG,sBAAAO,EAAA,6EAG0Ba,IAH1B,yBAECpB,SAAS,EACT2E,kBAHD,WACIjF,SADJ,6DAvBH,EAAKI,MAAQ,CACXE,SAAS,EACT0E,cAAe,GACfC,kBAAmB,IALT,E,qDASd,WACE1E,KAAKqE,eACLrE,KAAKkB,kB,oBAsBP,WACE,MAAsDlB,KAAKH,MAAnD4E,EAAR,EAAQA,cAAe1E,EAAvB,EAAuBA,QAAS2E,EAAhC,EAAgCA,kBAChC,OACE,sBAAK,cAAY,aAAavF,UAAU,YAAxC,UACE,cAAC,EAAD,IAEEsF,EAAc9E,OAAS,GACrB,0BAASR,UAAU,UAAnB,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKsE,IAAMgB,EAAc,GAAGf,cAAgBC,IAAI,OAElD,sBAAKxE,UAAU,oBAAf,UACE,oBAAI,cAAY,aAAhB,SAA8BsF,EAAc,GAAGE,iBAC/C,mBAAG,cAAY,cAAf,SAA8BF,EAAc,GAAGG,mBAGnD,qBAAKzF,UAAU,QAAf,SAEIY,EAAU,cAAC,EAAD,IAAc0E,EACrBI,KAAI,SAAC/C,EAAOgD,GAAR,OACH,cAAC,EAAD,CAEEhD,MAAQA,EACRZ,cAAgBwD,GAFVI,kB,GAxDV1F,cCiDL2F,E,kDAnDb,aAAe,IAAD,8BACZ,gBAYF7D,cAAgB,WACd,EAAKzB,SAAS,CACZM,SAAS,GADX,sBAEG,sBAAAO,EAAA,6EAG0Ba,IAH1B,yBAECpB,SAAS,EACT2E,kBAHD,WACIjF,SADJ,6DAbH,EAAKI,MAAQ,CACXE,SAAS,EACT2E,kBAAmB,IALT,E,qDASd,WACE1E,KAAKkB,kB,oBAcP,WAAU,IAAD,OACP,EAAuClB,KAAKH,MAApC6E,EAAR,EAAQA,kBAAmB3E,EAA3B,EAA2BA,QAC3B,OACE,sBAAK,cAAY,iBAAiBZ,UAAU,YAA5C,UACE,cAAC,EAAD,IACA,oBAAIA,UAAU,mBAAd,+BACA,qBAAKA,UAAU,UAAf,SACE,8BAEIY,EAAU,cAAC,EAAD,IAAc2E,EACrBG,KAAI,SAAC/C,EAAOgD,GAAR,OACH,cAAC,EAAD,CAEEhD,MAAQA,EACRI,iBAAmB,EAAKhB,cACxBA,cAAgBwD,GAHVI,iB,GArCF1F,aC4DT4F,G,wDA1Db,aAAe,IAAD,8BACZ,gBAWFC,SAAW,WACT,EAAKxF,SAAS,CACZM,SAAS,GADX,sBAEG,sBAAAO,EAAA,6EAGgBhC,IAHhB,yBAECyB,SAAS,EACTmF,QAHD,WACIzF,SADJ,6DAbH,EAAKI,MAAQ,CACXE,SAAS,EACTmF,QAAS,IAJC,E,qDAQd,WACElF,KAAKiF,a,oBAcP,WACE,MAA6BjF,KAAKH,MAA1BqF,EAAR,EAAQA,QAASnF,EAAjB,EAAiBA,QACjB,OACE,sBAAK,cAAY,eAAeZ,UAAU,YAA1C,UACE,cAAC,EAAD,IAEEY,EAAU,cAAC,EAAD,IACR,0BAASZ,UAAU,uBAAnB,UACE,sBAAKA,UAAU,YAAf,UACE,4BAAG,6CACH,4BAAI+F,EAAQtG,UAEd,sBAAKO,UAAU,aAAf,UACE,4BAAG,8CACH,4BAAI+F,EAAQrG,WAEd,sBAAKM,UAAU,mBAAf,UACE,4BAAG,wDACH,4BAAI+F,EAAQnG,iBAEd,qBAAKI,UAAU,YAAf,SACE,wBAAQc,KAAK,SAAb,SACE,cAAC,IAAD,CAAMM,GAAG,gBAAT,yC,GA9CInB,c,QC8JP+F,E,kDA7Jb,aAAe,IAAD,8BACZ,gBAiBFC,cAAgB,WACd,MAKI,EAAKvF,MAJPjB,EADF,EACEA,KACAC,EAFF,EAEEA,MACAE,EAHF,EAGEA,YACAsG,EAJF,EAIEA,WAEW,KAATzG,GACW,KAAVC,GACgB,KAAhBE,GACAsG,GACH,EAAK5F,SAAS,CACZC,UAAU,KA9BF,EAmCduF,SAAW,WACT,EAAKxF,SAAS,CACZM,SAAS,GADX,sBAEG,8BAAAO,EAAA,sEACqBhC,IADrB,OACK4G,EADL,OAEKI,EAAK,eACX,EAAK7F,SAAS,CACZM,SAAS,EACTnB,KAAMsG,EAAQtG,KACdC,MAAOqG,EAAQrG,MACfE,YAAamG,EAAQnG,YACrBsG,WAAYC,EAAGC,KAAKL,EAAQrG,SAE9B,EAAKuG,gBAVJ,6CAtCS,EAoDdI,SAAW,WACT,MAII,EAAK3F,MAHPjB,EADF,EACEA,KACAC,EAFF,EAEEA,MACAE,EAHF,EAGEA,YAEF,EAAKU,SAAS,CACZM,SAAS,GADX,sBAEG,4BAAAO,EAAA,sEACgBtB,EAAW,CAAEJ,OAAMC,QAAOE,gBAD1C,OACKqD,EADL,OAED,EAAK3C,SAAS,CACZM,SAAS,EACTD,SAAiB,OAAPsC,IAJX,6CA5DS,EAqEdqD,aAAe,YAAkC,IAAD,IAA9BjG,OAAUZ,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,MAChC,EAAKE,SAAL,eACGb,EAAOW,IAEV,EAAK6F,iBAzEO,EA4EdM,cAAgB,YAA4B,IAAfnG,EAAc,EAAxBC,OAAUD,MAI3B,EAAKE,SAAS,CACZ4F,WAFS,eAEME,KAAKhG,MA/EtB,EAAKM,MAAQ,CACXE,SAAS,EACTL,UAAU,EACVI,UAAU,EACVlB,KAAM,GACNC,MAAO,GACPE,YAAa,GACbsG,YAAY,GATF,E,qDAad,WACErF,KAAKiF,a,oBAuEP,WAAU,IAAD,OACP,EAOIjF,KAAKH,MANPE,EADF,EACEA,QACAL,EAFF,EAEEA,SACAd,EAHF,EAGEA,KACAC,EAJF,EAIEA,MACAE,EALF,EAKEA,YACAe,EANF,EAMEA,SAGF,OACE,sBAAK,cAAY,oBAAoBX,UAAU,YAA/C,UACE,cAAC,EAAD,IAEEY,EAAU,cAAC,EAAD,IACR,0BAASZ,UAAU,uBAAnB,UACE,sBAAKA,UAAU,YAAf,UACE,4BAAG,6CACH,uBACE,cAAY,kBACZP,KAAK,OACLqB,KAAK,OACLC,YAAY,cACZE,SAAW,SAAC8D,GAAQ,EAAKuB,aAAavB,IACtC3E,MAAQX,OAGZ,sBAAKO,UAAU,aAAf,UACE,4BAAG,8CACH,uBACE,cAAY,mBACZP,KAAK,QACLqB,KAAK,QACLC,YAAY,eACZE,SAAW,SAAC8D,GAAQ,EAAKuB,aAAavB,IACtCyB,OAAS,SAACzB,GAAQ,EAAKwB,cAAcxB,IACrC3E,MAAQV,EACRsB,GAAG,aAGP,sBAAKhB,UAAU,mBAAf,UACE,4BAAG,wDACH,uBACE,cAAY,yBACZP,KAAK,cACLqB,KAAK,OACLC,YAAY,yBACZE,SAAW,SAAC8D,GAAQ,EAAKuB,aAAavB,IACtC3E,MAAQR,OAGZ,qBAAKI,UAAU,YAAf,SACE,wBACE,cAAY,mBACZO,SAAWA,EACXO,KAAK,SACLI,QAAUL,KAAKwF,SAJjB,sBAUA1F,GAAY,cAAC,IAAD,CAAUS,GAAG,uB,GApJfnB,a,QCFpBwG,G,kKACJ,WACE,MAKM5F,KAAKmC,MALH0D,MACNjB,EADF,EACEA,WACAkB,EAFF,EAEEA,aACAnB,EAHF,EAGEA,eACAjB,EAJF,EAIEA,cAEF,OACE,yBAASvE,UAAU,wBAAnB,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKsE,IAAMC,EAAgBC,IAAMiB,IACjC,6BACE,cAAC,IAAD,CACErE,GAAE,iBAAauF,GACf,sCAA+BA,GAFjC,SAIGnB,MAGL,mBAAGxF,UAAU,cAAcgB,GAAG,cAA9B,SACE,sBAAMyD,MAAQgB,EAAd,SACGA,e,GAtBMxF,cA8BrBwG,EAAOzB,aAAe,CACpB0B,MAAO,IAaMD,QCjDTG,EAAe,uCAAG,WAAOC,GAAP,yBAAA1F,EAAA,6DAChB2F,EAAgBC,UAAUF,GAAQG,WAAW,MAAO,KAEpDC,EAHgB,4DAGoDH,EAHpD,qCAKIvF,MAAM0F,GALV,cAKhBC,EALgB,gBAOIA,EAAYzF,OAPhB,uBAOdE,EAPc,EAOdA,QAEF3C,EAAW2C,EAAQ+D,KACvB,kBASO,CACLyB,SAVF,EACEA,SAUA1B,WAXF,EAEEA,WAUAkB,aAZF,EAGEA,aAUAnB,eAbF,EAIEA,eAUA4B,gBAdF,EAKEA,gBAUA7C,cAfF,EAMEA,cAUA8C,YAhBF,EAOEA,YAUAC,WAjBF,EAQEA,eAlBkB,kBA8BftI,GA9Be,4CAAH,sDAiCN4H,I,gBC1BTW,GAAWC,YAAY,CAC3B/H,KAAM,OACNgI,aANmB,CACnBC,OAAQ,IAMRC,SAAU,CACRC,UAAW,SAAClH,EAAOmH,GACjBnH,EAAMgH,OAAN,YAAmBG,EAAOC,aAKjBF,GAAcL,GAASQ,QAAvBH,UAEAL,MAAf,QCTMS,G,kDACJ,aAAe,IAAD,8BACZ,gBAUFC,kBAAoB,YAA4B,IAAf7H,EAAc,EAAxBC,OAAUD,MAC/B,EAAKE,SAAS,CACZC,SAAUH,EAAMI,OAAS,EACzB0H,aAAc9H,KAdJ,EAkBdsH,OAAS,SAACS,GACR,IAAQC,EAAa,EAAKpF,MAAlBoF,SAER,EAAK9H,SAAS,CACZM,SAAS,EACTsH,aAAc,IAFhB,sBAGG,4BAAA/G,EAAA,sEAC4ByF,EAAgBuB,GAD5C,OACKE,EADL,OAEDD,EAASC,GACT,EAAK/H,SAAS,CACZC,UAAU,EACVK,SAAS,EACT0H,QAAQ,EACRC,iBAAkBJ,IAPnB,6CAtBH,EAAKzH,MAAQ,CACXwH,aAAc,GACdK,iBAAkB,GAClBhI,UAAU,EACVK,SAAS,EACT0H,QAAQ,GAPE,E,0CAoCd,WAAU,IAAD,OACP,EAMIzH,KAAKH,MALPwH,EADF,EACEA,aACA3H,EAFF,EAEEA,SACAK,EAHF,EAGEA,QACA0H,EAJF,EAIEA,OACAC,EALF,EAKEA,iBAGMC,EAAS3H,KAAKmC,MAAdwF,KACR,OACE,sBAAK,cAAY,cAAcxI,UAAU,YAAzC,UACE,cAAC,EAAD,IACA,yBAASA,UAAU,0BAAnB,SAEIY,EAAU,cAAC,EAAD,IAEN,sBAAKZ,UAAU,yBAAf,UACE,uBACEc,KAAK,OACLrB,KAAK,SACLuB,GAAG,SACHZ,MAAQ8H,EACRjH,SAAWJ,KAAKoH,kBAChB,cAAY,sBACZlH,YAAY,sBAEd,wBACED,KAAK,SACLP,SAAWA,EACX,cAAY,uBACZW,QAAU,WAAQ,EAAKwG,OAAOQ,IAJhC,uBAaRM,EAAKd,OAAOlH,OAAS,GACnB,0BAASR,UAAU,kCAAnB,UACE,mBAAGA,UAAU,mBAAb,8CAC+BuI,KAE/B,qBAAKvI,UAAU,gBAAf,SAEIwI,EAAKd,OACFhC,KAAI,SAACtF,GAAD,OAAW,cAAC,EAAD,CAAmCsG,MAAQtG,GAA7BA,EAAMuG,sBAO9C2B,GAAiC,IAAvBE,EAAKd,OAAOlH,QACpB,mBAAGR,UAAU,mBAAb,mD,GA7FSC,aAkHNwI,gBARS,SAAC/H,GAAD,MAAY,CAClC8H,KAAM9H,EAAM8H,SAGa,SAACE,GAAD,MAAe,CACxCN,SAAU,SAAChI,GAAD,OAAWsI,EAASd,GAAUxH,QAG3BqI,CAA6CT,IClHtDW,G,4JACJ,WACE,OACE,qBAAK3I,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4I,KAAK,gBAAgBC,UAAY7C,IACxC,cAAC,IAAD,CAAO8C,OAAK,EAACF,KAAK,WAAWC,UAAYhD,IACzC,cAAC,IAAD,CAAO+C,KAAK,aAAaC,UAAYjD,IACrC,cAAC,IAAD,CAAOgD,KAAK,aAAaC,UAAY5D,IACrC,cAAC,IAAD,CAAO2D,KAAK,UAAUC,UAAYb,KAClC,cAAC,IAAD,CACEc,OAAK,EACLF,KAAK,IACLG,OAAS,kBAAM,cAAC,EAAD,OAEjB,cAAC,IAAD,CAAOH,KAAK,IAAIC,UAAYxH,a,GAfpB2H,IAAM/I,WAsBT0I,MCtBAM,GANDC,YAAe,CAC3BC,QAAS,CACPX,KAAMY,MCEVC,IAASN,OACP,cAAC,IAAMO,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAQA,GAAlB,SACE,cAAC,GAAD,UAINtF,SAASM,eAAe,W","file":"static/js/main.fd6d0ce5.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\r\nimport '../styles/loadin.css';\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dot\" data-testid=\"loadin\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { createUser } from '../services/userAPI';\r\nimport Loading from './Loading';\r\nimport '../styles/login.css';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userName: '',\r\n      disabled: true,\r\n      redirect: false,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  checkUserName = ({ target: { value } }) => {\r\n    const MIN_CHARACTERS = 3;\r\n    this.setState({\r\n      disabled: value.length < MIN_CHARACTERS,\r\n      userName: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { disabled, userName, loading, redirect } = this.state;\r\n    // const { logarUser } = this.props;\r\n    return (\r\n      <div>\r\n        {\r\n          loading ? <Loading /> : (\r\n            <div data-testid=\"page-login\" className=\"login-container\">\r\n              <h1>Login</h1>\r\n              <div className=\"login-inputs\">\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"nameUser\"\r\n                    placeholder=\"Qual o seu nome?\"\r\n                    id=\"nameUser\"\r\n                    value={ userName }\r\n                    onChange={ this.checkUserName }\r\n                    data-testid=\"login-name-input\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type=\"button\"\r\n                    disabled={ disabled }\r\n                    onClick={ () => {\r\n                      this.setState({\r\n                        loading: true,\r\n                      }, async () => {\r\n                        this.setState({\r\n                          loading: false,\r\n                          redirect: await createUser({ name: userName }) === 'OK',\r\n                        });\r\n                        // logarUser();\r\n                      });\r\n                    } }\r\n                    data-testid=\"login-submit-button\"\r\n                  >\r\n                    Entrar\r\n                  </button>\r\n                </div>\r\n                {\r\n                  redirect && <Redirect to=\"/search\" />\r\n                }\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div data-testid=\"page-not-found\">\r\n        NotFound\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../pages/Loading';\r\nimport { getUser } from '../services/userAPI';\r\nimport '../styles/header.css';\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: '',\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.recoverUser();\r\n  }\r\n\r\n  recoverUser = async () => {\r\n    const user = await getUser();\r\n    this.setState({\r\n      user: await user.name,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { user, loading } = this.state;\r\n    return (\r\n      <header data-testid=\"header-component\">\r\n        <section>\r\n          <div>\r\n            <h1>\r\n              Stream Tune\r\n            </h1>\r\n          </div>\r\n          <div>\r\n            {\r\n              loading ? <Loading /> : (\r\n                <span>\r\n                  Olá,\r\n                  {' '}\r\n                  <strong data-testid=\"header-user-name\">{ user }</strong>\r\n                </span>\r\n              )\r\n            }\r\n          </div>\r\n        </section>\r\n        <ul>\r\n          <li><Link data-testid=\"link-to-search\" to=\"/search\">Search</Link></li>\r\n          <li><Link data-testid=\"link-to-favorites\" to=\"/favorites\">Favorites</Link></li>\r\n          <li><Link data-testid=\"link-to-profile\" to=\"/profile\">Profile</Link></li>\r\n        </ul>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaHeart, FaPlay, FaPause } from 'react-icons/fa';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\nimport '../styles/musiccard.css';\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      play: false,\n      loading: false,\n      checked: false,\n      audioId: 'audio',\n      intervalo: null,\n    };\n  }\n\n  componentDidMount() {\n    const { music } = this.props;\n    this.checkFavorites();\n    this.setState({\n      audioId: music.trackId,\n    });\n  }\n\n  componentWillUnmount() {\n    const { intervalo } = this.state;\n    clearInterval(intervalo);\n  }\n\n  toggleFavoriteSongs = ({ target }, music) => {\n    if (target.checked) {\n      this.addToFavorites(music);\n    } else {\n      this.removeToFavoriteSongs(music);\n    }\n  }\n\n  removeToFavoriteSongs = (music) => {\n    const { funFavoriteSongs } = this.props;\n    this.setState({\n      loading: true,\n    }, async () => {\n      const ok = await removeSong(music);\n      this.setState({\n        loading: !ok === 'OK',\n        checked: false,\n      });\n      if (funFavoriteSongs) {\n        funFavoriteSongs();\n      }\n    });\n  }\n\n  addToFavorites = (music) => {\n    this.setState({\n      loading: true,\n    }, async () => {\n      const ok = await addSong(music);\n      this.setState({\n        loading: !ok === 'OK',\n        checked: true,\n      });\n    });\n  }\n\n  checkFavorites = () => {\n    const { music, favoriteSongs } = this.props;\n    const yes = favoriteSongs.some((value) => value.trackId === music.trackId);\n    if (yes) {\n      this.setState({\n        checked: true,\n      });\n    }\n  }\n\n  progresso = (audio) => {\n    const { music } = this.props;\n    const { intervalo } = this.state;\n    const percentual = (audio.currentTime / audio.duration) * 100;\n    if (audio.currentTime === audio.duration) {\n      clearInterval(intervalo);\n    }\n    const barra = document.getElementsByClassName(music.trackId);\n    const bar = barra[0];\n    bar.style.cssText = `height: 2px; width: ${percentual}%; background: #fea418;`;\n    // bar.style.width = ``;\n    // bar.style.background = '#fea418';\n  }\n\n  playMusic = () => {\n    const { audioId } = this.state;\n    const SECOND = 1000;\n    const audio = document.getElementById(audioId);\n    audio.play();\n\n    const intervalo = setInterval(() => {\n      this.progresso(audio);\n    }, SECOND);\n    this.setState({\n      intervalo,\n    });\n  }\n\n  pauseMusic = () => {\n    const { audioId, intervalo } = this.state;\n    const audio = document.getElementById(audioId);\n    audio.pause();\n    clearInterval(intervalo);\n  }\n\n  render() {\n    const { music } = this.props;\n    const { loading, checked, audioId, play } = this.state;\n    return (\n      <section>\n        {\n          music.trackId && (\n            <div className=\"card-music-container\">\n              <div className=\"card-music-thumb\">\n                <img src={ music.artworkUrl100 } alt=\"Thumbnail do albúm\" />\n              </div>\n              <div className=\"card-music-label-player\">\n                <div className=\"card-music-trackName\">\n                  <p className=\"artist-name\">\n                    <abbr title={ music.trackName }>\n                      {music.trackName}\n                    </abbr>\n                  </p>\n                </div>\n                <div className=\"card-music-player\">\n                  {\n                    music.previewUrl && (\n                      <>\n                        <audio\n                          data-testid=\"audio-component\"\n                          src={ music.previewUrl }\n                          controls\n                          id={ audioId }\n                        >\n                          <track kind=\"captions\" />\n                        </audio>\n                        <div>\n                          {\n                            play ? (\n                              <button\n                                type=\"button\"\n                                onClick={ () => {\n                                  this.pauseMusic();\n                                  this.setState({\n                                    play: !play,\n                                  });\n                                } }\n                              >\n                                <FaPause />\n                              </button>\n                            ) : (\n                              <button\n                                type=\"button\"\n                                onClick={ () => {\n                                  this.playMusic();\n                                  this.setState({\n                                    play: !play,\n                                  });\n                                } }\n                              >\n                                <FaPlay />\n                              </button>\n                            )\n                          }\n                        </div>\n                      </>\n                    )\n                  }\n                </div>\n                <div className=\"progress-bar\">\n                  <div className={ music.trackId } />\n                </div>\n              </div>\n              <div className=\"card-music-saveFavorite\">\n                {\n                  loading ? <Loading /> : (\n                    <label\n                      htmlFor={ music.trackId }\n                      className={ checked ? 'checked' : '' }\n                    >\n                      <FaHeart />\n                      <input\n                        type=\"checkbox\"\n                        name=\"favorite-input\"\n                        checked={ checked }\n                        data-testid={ `checkbox-music-${music.trackId}` }\n                        onChange={ (e) => { this.toggleFavoriteSongs(e, music); } }\n                        id={ music.trackId }\n                      />\n                    </label>\n                  )\n                }\n              </div>\n            </div>\n          )\n        }\n      </section>\n    );\n  }\n}\n\nMusicCard.defaultProps = {\n  favoriteSongs: [],\n  funFavoriteSongs: () => {},\n};\n\nMusicCard.propTypes = {\n  music: PropTypes.shape({\n    artworkUrl100: PropTypes.string,\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number,\n  }).isRequired,\n  favoriteSongs: PropTypes.arrayOf(PropTypes.object),\n  funFavoriteSongs: PropTypes.func,\n};\n\nexport default MusicCard;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport getMusics from '../services/musicsAPI';\r\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\r\nimport Header from '../Components/Header';\r\nimport MusicCard from '../Components/MusicCard';\r\nimport Loading from './Loading';\r\nimport '../styles/album.css';\r\n\r\nclass Album extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: false,\r\n      albumReceived: [],\r\n      favoriteSongsList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.receiveAlbum();\r\n    this.favoriteSongs();\r\n  }\r\n\r\n  receiveAlbum = async () => {\r\n    const { match: { params: { id } } } = this.props;\r\n    const alb = await getMusics(id);\r\n    this.setState({\r\n      albumReceived: alb,\r\n    });\r\n  }\r\n\r\n  favoriteSongs = () => {\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      this.setState({\r\n        loading: false,\r\n        favoriteSongsList: await getFavoriteSongs(),\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { albumReceived, loading, favoriteSongsList } = this.state;\r\n    return (\r\n      <div data-testid=\"page-album\" className=\"container\">\r\n        <Header />\r\n        {\r\n          albumReceived.length > 0 && (\r\n            <section className=\"content\">\r\n              <div className=\"thumb-album\">\r\n                <div className=\"img-album\">\r\n                  <img src={ albumReceived[0].artworkUrl100 } alt=\"\" />\r\n                </div>\r\n                <div className=\"description-album\">\r\n                  <h3 data-testid=\"album-name\">{albumReceived[0].collectionName}</h3>\r\n                  <p data-testid=\"artist-name\">{albumReceived[0].artistName}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"music\">\r\n                {\r\n                  loading ? <Loading /> : albumReceived\r\n                    .map((music, index) => (\r\n                      <MusicCard\r\n                        key={ index }\r\n                        music={ music }\r\n                        favoriteSongs={ favoriteSongsList }\r\n                      />\r\n                    ))\r\n                }\r\n              </div>\r\n            </section>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAlbum.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default Album;\r\n","import React, { Component } from 'react';\r\nimport Header from '../Components/Header';\r\nimport MusicCard from '../Components/MusicCard';\r\nimport Loading from './Loading';\r\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\r\n\r\nclass Favorites extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: false,\r\n      favoriteSongsList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.favoriteSongs();\r\n  }\r\n\r\n  favoriteSongs = () => {\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      this.setState({\r\n        loading: false,\r\n        favoriteSongsList: await getFavoriteSongs(),\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { favoriteSongsList, loading } = this.state;\r\n    return (\r\n      <div data-testid=\"page-favorites\" className=\"container\">\r\n        <Header />\r\n        <h3 className=\"page-description\">Musicas Favoritas</h3>\r\n        <div className=\"content\">\r\n          <div>\r\n            {\r\n              loading ? <Loading /> : favoriteSongsList\r\n                .map((music, index) => (\r\n                  <MusicCard\r\n                    key={ index }\r\n                    music={ music }\r\n                    funFavoriteSongs={ this.favoriteSongs }\r\n                    favoriteSongs={ favoriteSongsList }\r\n                  />\r\n                ))\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorites;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Components/Header';\r\nimport { getUser } from '../services/userAPI';\r\nimport Loading from './Loading';\r\nimport '../styles/profile.css';\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: false,\r\n      profile: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.findUser();\r\n  }\r\n\r\n  findUser = () => {\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      this.setState({\r\n        loading: false,\r\n        profile: await getUser(),\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { profile, loading } = this.state;\r\n    return (\r\n      <div data-testid=\"page-profile\" className=\"container\">\r\n        <Header />\r\n        {\r\n          loading ? <Loading /> : (\r\n            <section className=\"content profile-page\">\r\n              <div className=\"name-user\">\r\n                <p><strong>Nome:</strong></p>\r\n                <p>{profile.name}</p>\r\n              </div>\r\n              <div className=\"email-user\">\r\n                <p><strong>Email:</strong></p>\r\n                <p>{profile.email}</p>\r\n              </div>\r\n              <div className=\"description-user\">\r\n                <p><strong>Descrição:</strong></p>\r\n                <p>{profile.description}</p>\r\n              </div>\r\n              <div className=\"edit-user\">\r\n                <button type=\"button\">\r\n                  <Link to=\"/profile/edit\">\r\n                    Editar perfil\r\n                  </Link>\r\n                </button>\r\n              </div>\r\n            </section>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from '../Components/Header';\r\nimport { getUser, updateUser } from '../services/userAPI';\r\nimport Loading from './Loading';\r\nimport '../styles/profile.css';\r\n\r\nclass ProfileEdit extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: false,\r\n      disabled: true,\r\n      redirect: false,\r\n      name: '',\r\n      email: '',\r\n      description: '',\r\n      validEmail: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.findUser();\r\n    // this.checkDisabled();\r\n  }\r\n\r\n  checkDisabled = () => {\r\n    const {\r\n      name,\r\n      email,\r\n      description,\r\n      validEmail,\r\n    } = this.state;\r\n    if (name !== ''\r\n      && email !== ''\r\n      && description !== ''\r\n      && validEmail) {\r\n      this.setState({\r\n        disabled: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  findUser = () => {\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      const profile = await getUser();\r\n      const re = /\\S+@\\S+\\.\\S+/;\r\n      this.setState({\r\n        loading: false,\r\n        name: profile.name,\r\n        email: profile.email,\r\n        description: profile.description,\r\n        validEmail: re.test(profile.email),\r\n      });\r\n      this.checkDisabled();\r\n    });\r\n  }\r\n\r\n  editUser = () => {\r\n    const {\r\n      name,\r\n      email,\r\n      description,\r\n    } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      const ok = await updateUser({ name, email, description });\r\n      this.setState({\r\n        loading: false,\r\n        redirect: ok === 'OK',\r\n      });\r\n    });\r\n  }\r\n\r\n  handleInputs = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n    this.checkDisabled();\r\n  }\r\n\r\n  validateEmail = ({ target: { value } }) => {\r\n    // Trecho de código baseado na solução encontrada nesse endereço:\r\n    // https://www.horadecodar.com.br/2020/09/13/como-validar-email-com-javascript/\r\n    const re = /\\S+@\\S+\\.\\S+/;\r\n    this.setState({\r\n      validEmail: re.test(value),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      disabled,\r\n      name,\r\n      email,\r\n      description,\r\n      redirect,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div data-testid=\"page-profile-edit\" className=\"container\">\r\n        <Header />\r\n        {\r\n          loading ? <Loading /> : (\r\n            <section className=\"content profile-page\">\r\n              <div className=\"name-user\">\r\n                <p><strong>Nome:</strong></p>\r\n                <input\r\n                  data-testid=\"edit-input-name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Editar nome\"\r\n                  onChange={ (e) => { this.handleInputs(e); } }\r\n                  value={ name }\r\n                />\r\n              </div>\r\n              <div className=\"email-user\">\r\n                <p><strong>Email:</strong></p>\r\n                <input\r\n                  data-testid=\"edit-input-email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Editar email\"\r\n                  onChange={ (e) => { this.handleInputs(e); } }\r\n                  onBlur={ (e) => { this.validateEmail(e); } }\r\n                  value={ email }\r\n                  id=\"email\"\r\n                />\r\n              </div>\r\n              <div className=\"description-user\">\r\n                <p><strong>Descrição:</strong></p>\r\n                <input\r\n                  data-testid=\"edit-input-description\"\r\n                  name=\"description\"\r\n                  type=\"text\"\r\n                  placeholder=\"Editar descrição\"\r\n                  onChange={ (e) => { this.handleInputs(e); } }\r\n                  value={ description }\r\n                />\r\n              </div>\r\n              <div className=\"edit-user\">\r\n                <button\r\n                  data-testid=\"edit-button-save\"\r\n                  disabled={ disabled }\r\n                  type=\"button\"\r\n                  onClick={ this.editUser }\r\n                >\r\n                  Salvar\r\n                </button>\r\n              </div>\r\n              {\r\n                redirect && <Redirect to=\"/profile\" />\r\n              }\r\n            </section>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../styles/artist.css';\n\nclass Artist extends Component {\n  render() {\n    const { album: {\n      artistName,\n      collectionId,\n      collectionName,\n      artworkUrl100,\n    } } = this.props;\n    return (\n      <section className=\"artist-card-container\">\n        <div className=\"card-artist\">\n          <img src={ artworkUrl100 } alt={ artistName } />\n          <h5>\n            <Link\n              to={ `/album/${collectionId}` }\n              data-testid={ `link-to-album-${collectionId}` }\n            >\n              {collectionName}\n            </Link>\n          </h5>\n          <p className=\"artist-name\" id=\"artist-name\">\n            <abbr title={ artistName }>\n              {artistName}\n            </abbr>\n          </p>\n        </div>\n      </section>\n    );\n  }\n}\nArtist.defaultProps = {\n  album: {},\n};\n\nArtist.propTypes = {\n  album: PropTypes.shape({\n    artistId: PropTypes.number,\n    artistName: PropTypes.string,\n    collectionId: PropTypes.number,\n    collectionName: PropTypes.string,\n    artworkUrl100: PropTypes.string,\n  }),\n};\n\nexport default Artist;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","// src/reducers/index.js\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  albums: [],\n};\n\nconst addSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    addAlbuns: (state, action) => {\n      state.albums = [...action.payload];\n    },\n  },\n});\n\nexport const { addAlbuns } = addSlice.actions;\n\nexport default addSlice.reducer;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Artist from '../Components/Artist';\r\nimport Header from '../Components/Header';\r\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\r\nimport Loading from './Loading';\r\nimport '../styles/search.css';\r\nimport { addAlbuns } from '../slices';\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      termToSearch: '',\r\n      lastTermSearched: '',\r\n      disabled: true,\r\n      loading: false,\r\n      search: false,\r\n    };\r\n  }\r\n\r\n  checkTermToSearch = ({ target: { value } }) => {\r\n    this.setState({\r\n      disabled: value.length < 2,\r\n      termToSearch: value,\r\n    });\r\n  }\r\n\r\n  albums = (term) => {\r\n    const { addToRTK } = this.props;\r\n\r\n    this.setState({\r\n      loading: true,\r\n      termToSearch: '',\r\n    }, async () => {\r\n      const albumsReceived = await searchAlbumsAPI(term);\r\n      addToRTK(albumsReceived);\r\n      this.setState({\r\n        disabled: true,\r\n        loading: false,\r\n        search: true,\r\n        lastTermSearched: term,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      termToSearch,\r\n      disabled,\r\n      loading,\r\n      search,\r\n      lastTermSearched,\r\n    } = this.state;\r\n\r\n    const { data } = this.props;\r\n    return (\r\n      <div data-testid=\"page-search\" className=\"container\">\r\n        <Header />\r\n        <section className=\"search-container-inputs\">\r\n          {\r\n            loading ? <Loading />\r\n              : (\r\n                <div className=\"search-input-container\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    id=\"search\"\r\n                    value={ termToSearch }\r\n                    onChange={ this.checkTermToSearch }\r\n                    data-testid=\"search-artist-input\"\r\n                    placeholder=\"Busque um artista\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    disabled={ disabled }\r\n                    data-testid=\"search-artist-button\"\r\n                    onClick={ () => { this.albums(termToSearch); } }\r\n                  >\r\n                    Find\r\n                  </button>\r\n                </div>\r\n              )\r\n          }\r\n        </section>\r\n        {\r\n          data.albums.length > 0 && (\r\n            <section className=\"search-result-container content\">\r\n              <p className=\"page-description\">\r\n                { `Resultado de álbuns de: ${lastTermSearched}` }\r\n              </p>\r\n              <div className=\"albuns-result\">\r\n                {\r\n                  data.albums\r\n                    .map((value) => <Artist key={ value.collectionId } album={ value } />)\r\n                }\r\n              </div>\r\n            </section>\r\n          )\r\n        }\r\n        {\r\n          search && data.albums.length === 0 && (\r\n            <p className=\"page-description\">Nenhum álbum foi encontrado</p>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  addToRTK: PropTypes.func.isRequired,\r\n  data: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addToRTK: (value) => dispatch(addAlbuns(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport Search from './pages/Search';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/profile/edit\" component={ ProfileEdit } />\n          <Route exact path=\"/profile\" component={ Profile } />\n          <Route path=\"/favorites\" component={ Favorites } />\n          <Route path=\"/album/:id\" component={ Album } />\n          <Route path=\"/search\" component={ Search } />\n          <Route\n            exact\n            path=\"/\"\n            render={ () => <Login /> }\n          />\n          <Route path=\"*\" component={ NotFound } />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// src/store.index.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport myReducer from '../slices';\n\nconst store = configureStore({\n  reducer: {\n    data: myReducer,\n  },\n});\n// console.log(store.albums);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={ store }>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}