{"version":3,"sources":["services/userAPI.js","pages/Loading.jsx","pages/Login.jsx","pages/NotFound.jsx","services/musicsAPI.js","services/favoriteSongsAPI.js","Components/Header.jsx","Components/MusicCard.jsx","pages/Album.jsx","pages/Favorites.jsx","pages/Profile.jsx","pages/ProfileEdit.jsx","Components/Artist.jsx","services/searchAlbumsAPI.js","pages/Search.jsx","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Loading","Component","Login","checkUserName","value","target","setState","disabled","length","userName","state","redirect","loading","this","className","type","id","onChange","onClick","a","to","NotFound","getMusics","fetch","request","json","requestJson","results","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","Header","recoverUser","MusicCard","toggleFavoriteSongs","music","checked","addToFavorites","removeToFavoriteSongs","funFavoriteSongs","props","ok","checkFavorites","some","progresso","audio","intervalo","percentual","currentTime","duration","console","log","clearInterval","bar","document","getElementsByClassName","style","height","width","background","playMusic","audioId","getElementById","play","setInterval","pauseMusic","pause","src","artworkUrl100","alt","trackName","previewUrl","controls","kind","htmlFor","e","defaultProps","Album","receiveAlbum","match","params","alb","albumReceived","favoriteSongsList","collectionName","artistName","map","index","Favorites","Profile","findUser","profile","ProfileEdit","checkDisabled","validEmail","re","test","editUser","handleInputs","validateEmail","placeholder","autoComplete","onBlur","Artist","album","collectionId","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionPrice","releaseDate","trackCount","Search","checkTermToSearch","termToSearch","albums","term","albumsReceived","albumsOfTheArtist","search","lastTermSearched","App","path","component","exact","render","React","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c185905b.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Carregando...\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { createUser } from '../services/userAPI';\r\nimport Loading from './Loading';\r\nimport '../styles/login.css';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userName: '',\r\n      disabled: true,\r\n      redirect: false,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  checkUserName = ({ target: { value } }) => {\r\n    const MIN_CHARACTERS = 3;\r\n    this.setState({\r\n      disabled: value.length < MIN_CHARACTERS,\r\n      userName: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { disabled, userName, loading, redirect } = this.state;\r\n    // const { logarUser } = this.props;\r\n    return (\r\n      <div data-testid=\"page-login\" className=\"login-container\">\r\n        <h1>Login</h1>\r\n        <div className=\"login-inputs\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"nameUser\"\r\n              id=\"nameUser\"\r\n              value={ userName }\r\n              onChange={ this.checkUserName }\r\n              data-testid=\"login-name-input\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              disabled={ disabled }\r\n              onClick={ () => {\r\n                this.setState({\r\n                  loading: true,\r\n                }, async () => {\r\n                  this.setState({\r\n                    loading: false,\r\n                    redirect: await createUser({ name: userName }) === 'OK',\r\n                  });\r\n                  // logarUser();\r\n                });\r\n              } }\r\n              data-testid=\"login-submit-button\"\r\n            >\r\n              Entrar\r\n            </button>\r\n          </div>\r\n          {\r\n            loading && <Loading />\r\n          }\r\n          {\r\n            redirect && <Redirect to=\"/search\" />\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div data-testid=\"page-not-found\">\r\n        NotFound\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../pages/Loading';\r\nimport { getUser } from '../services/userAPI';\r\nimport '../styles/header.css';\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: '',\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.recoverUser();\r\n  }\r\n\r\n  recoverUser = async () => {\r\n    const user = await getUser();\r\n    this.setState({\r\n      user: await user.name,\r\n      loading: false,\r\n    });\r\n    // console.log(await user.name);\r\n  }\r\n\r\n  render() {\r\n    const { user, loading } = this.state;\r\n    return (\r\n      <header data-testid=\"header-component\">\r\n        <section>\r\n          <div>\r\n            <h1>\r\n              Stream Tune\r\n            </h1>\r\n          </div>\r\n          <div>\r\n            {\r\n              loading ? <Loading /> : (\r\n                <span>\r\n                  Olá,\r\n                  {' '}\r\n                  <strong data-testid=\"header-user-name\">{ user }</strong>\r\n                </span>\r\n              )\r\n            }\r\n          </div>\r\n        </section>\r\n        <ul>\r\n          <li><Link data-testid=\"link-to-search\" to=\"/search\">Search</Link></li>\r\n          <li><Link data-testid=\"link-to-favorites\" to=\"/favorites\">Favorites</Link></li>\r\n          <li><Link data-testid=\"link-to-profile\" to=\"/profile\">Profile</Link></li>\r\n        </ul>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaHeart, FaPlay, FaPause } from 'react-icons/fa';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\nimport '../styles/musiccard.css';\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      checked: false,\n      audioId: 'audio',\n      intervalo: null,\n    };\n  }\n\n  componentDidMount() {\n    const { music } = this.props;\n    this.checkFavorites();\n    this.setState({\n      audioId: music.trackId,\n    });\n  }\n\n  toggleFavoriteSongs = ({ target }, music) => {\n    if (target.checked) {\n      this.addToFavorites(music);\n    } else {\n      this.removeToFavoriteSongs(music);\n    }\n  }\n\n  removeToFavoriteSongs = (music) => {\n    const { funFavoriteSongs } = this.props;\n    this.setState({\n      loading: true,\n    }, async () => {\n      const ok = await removeSong(music);\n      this.setState({\n        loading: !ok === 'OK',\n        checked: false,\n      });\n      if (funFavoriteSongs) {\n        funFavoriteSongs();\n      }\n    });\n  }\n\n  addToFavorites = (music) => {\n    this.setState({\n      loading: true,\n    }, async () => {\n      const ok = await addSong(music);\n      this.setState({\n        loading: !ok === 'OK',\n        checked: true,\n      });\n    });\n  }\n\n  checkFavorites = () => {\n    const { music, favoriteSongs } = this.props;\n    const yes = favoriteSongs.some((value) => value.trackId === music.trackId);\n    if (yes) {\n      this.setState({\n        checked: true,\n      });\n    }\n  }\n\n  progresso = (audio) => {\n    const { music } = this.props;\n    const { intervalo } = this.state;\n    const percentual = (audio.currentTime / audio.duration) * 100;\n    if (audio.currentTime === audio.duration) {\n      console.log('fim');\n      clearInterval(intervalo);\n    }\n    console.log('rolando');\n    const barra = document.getElementsByClassName(music.trackId);\n    const bar = barra[0];\n    bar.style.height = '2px';\n    bar.style.width = `${percentual}%`;\n    bar.style.background = '#085ba3';\n  }\n\n  playMusic = () => {\n    const { audioId } = this.state;\n    const SECOND = 1000;\n    const audio = document.getElementById(audioId);\n    audio.play();\n    console.log(audio.duration);\n\n    const intervalo = setInterval(() => {\n      console.log(audio.currentTime);\n      this.progresso(audio);\n    }, SECOND);\n    this.setState({\n      intervalo,\n    });\n  }\n\n  pauseMusic = () => {\n    const { audioId, intervalo } = this.state;\n    const audio = document.getElementById(audioId);\n    audio.pause();\n    clearInterval(intervalo);\n  }\n\n  render() {\n    const { music } = this.props;\n    const { loading, checked, audioId } = this.state;\n    return (\n      <section>\n        {\n          music.trackId && (\n            <div className=\"card-music-container\">\n              <div className=\"card-music-thumb\">\n                <img src={ music.artworkUrl100 } alt=\"Thumbnail do albúm\" />\n              </div>\n              <div className=\"card-music-label-player\">\n                <div className=\"card-music-trackName\">\n                  <p>{music.trackName}</p>\n                </div>\n                <div className=\"card-music-player\">\n                  {\n                    music.previewUrl && (\n                      <>\n                        <audio\n                          data-testid=\"audio-component\"\n                          src={ music.previewUrl }\n                          controls\n                          id={ audioId }\n                        >\n                          <track kind=\"captions\" />\n                        </audio>\n                        <div>\n                          <button\n                            type=\"button\"\n                            onClick={ () => this.playMusic() }\n                          >\n                            <FaPlay />\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={ () => this.pauseMusic() }\n                          >\n                            <FaPause />\n                          </button>\n                        </div>\n                      </>\n                    )\n                  }\n                </div>\n                <div className=\"progress-bar\">\n                  <div className={ music.trackId } />\n                </div>\n              </div>\n              <div className=\"card-music-saveFavorite\">\n                {\n                  loading ? <Loading /> : (\n                    <label\n                      htmlFor={ music.trackId }\n                      className={ checked ? 'checked' : '' }\n                    >\n                      <FaHeart />\n                      <input\n                        type=\"checkbox\"\n                        name=\"favorite-input\"\n                        checked={ checked }\n                        data-testid={ `checkbox-music-${music.trackId}` }\n                        onChange={ (e) => { this.toggleFavoriteSongs(e, music); } }\n                        id={ music.trackId }\n                      />\n                    </label>\n                  )\n                }\n              </div>\n            </div>\n          )\n        }\n      </section>\n    );\n  }\n}\n\nMusicCard.defaultProps = {\n  favoriteSongs: [],\n  funFavoriteSongs: () => {},\n};\n\nMusicCard.propTypes = {\n  music: PropTypes.shape({\n    artworkUrl100: PropTypes.string,\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number,\n  }).isRequired,\n  favoriteSongs: PropTypes.arrayOf(PropTypes.object),\n  funFavoriteSongs: PropTypes.func,\n};\n\nexport default MusicCard;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport getMusics from '../services/musicsAPI';\r\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\r\nimport Header from '../Components/Header';\r\nimport MusicCard from '../Components/MusicCard';\r\nimport Loading from './Loading';\r\nimport '../styles/album.css';\r\n\r\nclass Album extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: false,\r\n      albumReceived: [],\r\n      favoriteSongsList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.receiveAlbum();\r\n    this.favoriteSongs();\r\n  }\r\n\r\n  receiveAlbum = async () => {\r\n    const { match: { params: { id } } } = this.props;\r\n    const alb = await getMusics(id);\r\n    this.setState({\r\n      albumReceived: alb,\r\n    });\r\n  }\r\n\r\n  favoriteSongs = () => {\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      this.setState({\r\n        loading: false,\r\n        favoriteSongsList: await getFavoriteSongs(),\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { albumReceived, loading, favoriteSongsList } = this.state;\r\n    return (\r\n      <div data-testid=\"page-album\" className=\"container\">\r\n        <Header />\r\n        {\r\n          albumReceived.length > 0 && (\r\n            <section className=\"content\">\r\n              <div className=\"thumb-album\">\r\n                <div className=\"img-album\">\r\n                  <img src={ albumReceived[0].artworkUrl100 } alt=\"\" />\r\n                </div>\r\n                <div className=\"description-album\">\r\n                  <h3 data-testid=\"album-name\">{albumReceived[0].collectionName}</h3>\r\n                  <p data-testid=\"artist-name\">{albumReceived[0].artistName}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"music\">\r\n                {\r\n                  loading ? <Loading /> : albumReceived\r\n                    .map((music, index) => (\r\n                      <MusicCard\r\n                        key={ index }\r\n                        music={ music }\r\n                        favoriteSongs={ favoriteSongsList }\r\n                      />\r\n                    ))\r\n                }\r\n              </div>\r\n            </section>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAlbum.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default Album;\r\n","import React, { Component } from 'react';\r\nimport Header from '../Components/Header';\r\nimport MusicCard from '../Components/MusicCard';\r\nimport Loading from './Loading';\r\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\r\n\r\nclass Favorites extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: false,\r\n      favoriteSongsList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.favoriteSongs();\r\n  }\r\n\r\n  favoriteSongs = () => {\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      this.setState({\r\n        loading: false,\r\n        favoriteSongsList: await getFavoriteSongs(),\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { favoriteSongsList, loading } = this.state;\r\n    return (\r\n      <div data-testid=\"page-favorites\" className=\"container\">\r\n        <Header />\r\n        <h3>Musicas Favoritas</h3>\r\n        <div className=\"content\">\r\n          <div>\r\n            {\r\n              loading ? <Loading /> : favoriteSongsList\r\n                .map((music, index) => (\r\n                  <MusicCard\r\n                    key={ index }\r\n                    music={ music }\r\n                    funFavoriteSongs={ this.favoriteSongs }\r\n                    favoriteSongs={ favoriteSongsList }\r\n                  />\r\n                ))\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorites;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Components/Header';\r\nimport { getUser } from '../services/userAPI';\r\nimport Loading from './Loading';\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: false,\r\n      profile: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.findUser();\r\n  }\r\n\r\n  findUser = () => {\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      this.setState({\r\n        loading: false,\r\n        profile: await getUser(),\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { profile, loading } = this.state;\r\n    return (\r\n      <div data-testid=\"page-profile\" className=\"container\">\r\n        <Header />\r\n        {\r\n          loading ? <Loading /> : (\r\n            <section className=\"content\">\r\n              <div className=\"img-user\">\r\n                <img\r\n                  data-testid=\"profile-image\"\r\n                  src={ profile.image }\r\n                  alt={ profile.name }\r\n                />\r\n                <button type=\"button\">\r\n                  <Link to=\"/profile/edit\">\r\n                    Editar perfil\r\n                  </Link>\r\n                </button>\r\n              </div>\r\n              <div className=\"name-user\">\r\n                <p><strong>Nome:</strong></p>\r\n                <p>{profile.name}</p>\r\n              </div>\r\n              <div className=\"email-user\">\r\n                <p><strong>Email:</strong></p>\r\n                <p>{profile.email}</p>\r\n              </div>\r\n              <div className=\"description-user\">\r\n                <p><strong>Descrição:</strong></p>\r\n                <p>{profile.description}</p>\r\n              </div>\r\n            </section>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from '../Components/Header';\r\nimport { getUser, updateUser } from '../services/userAPI';\r\nimport Loading from './Loading';\r\n\r\nclass ProfileEdit extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: false,\r\n      disabled: true,\r\n      redirect: false,\r\n      name: '',\r\n      email: '',\r\n      image: '',\r\n      description: '',\r\n      validEmail: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.findUser();\r\n    // this.checkDisabled();\r\n  }\r\n\r\n  checkDisabled = () => {\r\n    const {\r\n      name,\r\n      email,\r\n      image,\r\n      description,\r\n      validEmail,\r\n    } = this.state;\r\n    if (name !== ''\r\n      && email !== ''\r\n      && image !== ''\r\n      && description !== ''\r\n      && validEmail) {\r\n      this.setState({\r\n        disabled: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  findUser = () => {\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      const profile = await getUser();\r\n      const re = /\\S+@\\S+\\.\\S+/;\r\n      this.setState({\r\n        loading: false,\r\n        name: profile.name,\r\n        email: profile.email,\r\n        image: profile.image,\r\n        description: profile.description,\r\n        validEmail: re.test(profile.email),\r\n      });\r\n      this.checkDisabled();\r\n    });\r\n  }\r\n\r\n  editUser = () => {\r\n    const {\r\n      name,\r\n      email,\r\n      image,\r\n      description,\r\n    } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      const ok = await updateUser({ name, email, image, description });\r\n      this.setState({\r\n        loading: false,\r\n        redirect: ok === 'OK',\r\n      });\r\n    });\r\n  }\r\n\r\n  handleInputs = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n    this.checkDisabled();\r\n  }\r\n\r\n  validateEmail = ({ target: { value } }) => {\r\n    // Trecho de código baseado na solução encontrada nesse endereço:\r\n    // https://www.horadecodar.com.br/2020/09/13/como-validar-email-com-javascript/\r\n    const re = /\\S+@\\S+\\.\\S+/;\r\n    this.setState({\r\n      validEmail: re.test(value),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      disabled,\r\n      name,\r\n      email,\r\n      image,\r\n      description,\r\n      redirect,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div data-testid=\"page-profile-edit\" className=\"container\">\r\n        <Header />\r\n        {\r\n          loading ? <Loading /> : (\r\n            <section className=\"content\">\r\n              <div className=\"img-user\">\r\n                <img\r\n                  data-testid=\"profile-image\"\r\n                  src={ image }\r\n                  alt={ name }\r\n                />\r\n                <input\r\n                  data-testid=\"edit-input-image\"\r\n                  name=\"image\"\r\n                  type=\"text\"\r\n                  placeholder=\"Editar imagem\"\r\n                  onChange={ (e) => { this.handleInputs(e); } }\r\n                  value={ image }\r\n                  autoComplete=\"none\"\r\n                />\r\n              </div>\r\n              <div className=\"name-user\">\r\n                <p><strong>Nome:</strong></p>\r\n                <input\r\n                  data-testid=\"edit-input-name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Editar nome\"\r\n                  onChange={ (e) => { this.handleInputs(e); } }\r\n                  value={ name }\r\n                />\r\n              </div>\r\n              <div className=\"email-user\">\r\n                <p><strong>Email:</strong></p>\r\n                <input\r\n                  data-testid=\"edit-input-email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Editar email\"\r\n                  onChange={ (e) => { this.handleInputs(e); } }\r\n                  onBlur={ (e) => { this.validateEmail(e); } }\r\n                  value={ email }\r\n                  id=\"email\"\r\n                />\r\n              </div>\r\n              <div className=\"description-user\">\r\n                <p><strong>Descrição:</strong></p>\r\n                <input\r\n                  data-testid=\"edit-input-description\"\r\n                  name=\"description\"\r\n                  type=\"text\"\r\n                  placeholder=\"Editar descrição\"\r\n                  onChange={ (e) => { this.handleInputs(e); } }\r\n                  value={ description }\r\n                />\r\n              </div>\r\n              <div className=\"button-edit-user\">\r\n                <button\r\n                  data-testid=\"edit-button-save\"\r\n                  disabled={ disabled }\r\n                  type=\"button\"\r\n                  onClick={ this.editUser }\r\n                >\r\n                  Salvar\r\n                </button>\r\n              </div>\r\n              {\r\n                redirect && <Redirect to=\"/profile\" />\r\n              }\r\n            </section>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../styles/artist.css';\n\nclass Artist extends Component {\n  render() {\n    const { album: {\n      artistName,\n      collectionId,\n      collectionName,\n      artworkUrl100,\n    } } = this.props;\n    return (\n      <section className=\"artist-card-container\">\n        <div className=\"card-artist\">\n          <img src={ artworkUrl100 } alt={ artistName } />\n          <h5>\n            <Link\n              to={ `/album/${collectionId}` }\n              data-testid={ `link-to-album-${collectionId}` }\n            >\n              {collectionName}\n            </Link>\n          </h5>\n          <p id=\"artist-name\">{artistName}</p>\n        </div>\n      </section>\n    );\n  }\n}\nArtist.defaultProps = {\n  album: {},\n};\n\nArtist.propTypes = {\n  album: PropTypes.shape({\n    artistId: PropTypes.number,\n    artistName: PropTypes.string,\n    collectionId: PropTypes.number,\n    collectionName: PropTypes.string,\n    artworkUrl100: PropTypes.string,\n  }),\n};\n\nexport default Artist;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\r\nimport Artist from '../Components/Artist';\r\nimport Header from '../Components/Header';\r\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\r\nimport Loading from './Loading';\r\nimport '../styles/search.css';\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      termToSearch: '',\r\n      lastTermSearched: '',\r\n      albumsOfTheArtist: [],\r\n      disabled: true,\r\n      loading: false,\r\n      search: false,\r\n    };\r\n  }\r\n\r\n  checkTermToSearch = ({ target: { value } }) => {\r\n    this.setState({\r\n      disabled: value.length < 2,\r\n      termToSearch: value,\r\n      // lastTermSearched: value,\r\n    });\r\n  }\r\n\r\n  albums = (term) => {\r\n    this.setState({\r\n      loading: true,\r\n      termToSearch: '',\r\n    }, async () => {\r\n      const albumsReceived = await searchAlbumsAPI(term);\r\n      this.setState({\r\n        albumsOfTheArtist: albumsReceived,\r\n        disabled: true,\r\n        loading: false,\r\n        search: true,\r\n        lastTermSearched: term,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      termToSearch,\r\n      disabled,\r\n      loading,\r\n      search,\r\n      albumsOfTheArtist,\r\n      lastTermSearched,\r\n    } = this.state;\r\n    return (\r\n      <div data-testid=\"page-search\" className=\"container\">\r\n        <Header />\r\n        <section className=\"search-container-inputs\">\r\n          {\r\n            loading ? <Loading />\r\n              : (\r\n                <div className=\"search-input-container\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    id=\"search\"\r\n                    value={ termToSearch }\r\n                    onChange={ this.checkTermToSearch }\r\n                    data-testid=\"search-artist-input\"\r\n                    placeholder=\"Busque um artista\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    disabled={ disabled }\r\n                    data-testid=\"search-artist-button\"\r\n                    onClick={ () => { this.albums(termToSearch); } }\r\n                  >\r\n                    Pesquisar\r\n                  </button>\r\n                </div>\r\n              )\r\n          }\r\n        </section>\r\n        {\r\n          search && albumsOfTheArtist.length > 0 && (\r\n            <section className=\"search-result-container content\">\r\n              <p>\r\n                { `Resultado de álbuns de: ${lastTermSearched}` }\r\n              </p>\r\n              <div className=\"albuns-result\">\r\n                {\r\n                  albumsOfTheArtist\r\n                    .map((value) => <Artist key={ value.collectionId } album={ value } />)\r\n                }\r\n              </div>\r\n            </section>\r\n          )\r\n        }\r\n        {\r\n          search && albumsOfTheArtist.length === 0 && <p>Nenhum álbum foi encontrado</p>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport Search from './pages/Search';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Switch>\n            <Route path=\"/profile/edit\" component={ ProfileEdit } />\n            <Route exact path=\"/profile\" component={ Profile } />\n            <Route path=\"/favorites\" component={ Favorites } />\n            <Route path=\"/album/:id\" component={ Album } />\n            <Route path=\"/search\" component={ Search } />\n            <Route\n              exact\n              path=\"/\"\n              render={ () => <Login /> }\n            />\n            <Route path=\"*\" component={ NotFound } />\n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}